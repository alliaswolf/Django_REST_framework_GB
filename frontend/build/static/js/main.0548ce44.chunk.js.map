{"version":3,"sources":["components/Users.js","components/ProjectForm.js","components/Projects.js","components/Todos.js","components/TodoForm.js","components/Home.js","components/Menu.js","components/Footer.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","id","username","firstName","lastName","email","birthday","UserList","users","className","map","toString","UserListFilterId","useParams","filtered_items","filter","item","ProjectForm","props","state","title","link","usersWorked","event","this","setState","target","name","value","selectedOptions","i","length","push","titleForm","createProject","editProject","idProject","console","log","preventDefault","onSubmit","handleSubmit","htmlFor","type","onChange","handleChange","multiple","handleUsersWorkedChange","React","Component","ProjectItem","project","deleteProject","history","useHistory","to","location","pathname","join","onClick","ProjectList","projects","useState","input","setInput","toLowerCase","includes","placeholder","e","ProjectListFilterId","TodoItem","todo","deleteTodo","text","style","textDecoration","author","isActive","Date","dateCreated","toLocaleString","dateModified","TodoList","todos","TodoListFilterId","TodoForm","toggleChange","selectedIdAuthor","selectedIdProject","createTodo","defaultChecked","handleAuthorChange","handleProjectChange","InfoItem","model","InfoList","models","MenuItem","MenuList","menu","menuItem","Footer","textFooter","LoginForm","login","password","get_token","NotFound404","App","token","cookies","Cookies","set","load_data","set_token_and_username","get","axios","post","then","response","data","catch","error","alert","status","headers","is_authenticated","a","get_headers","results","patch","delete","get_token_and_username_from_storage","logout","Menu","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0548ce44.chunk.js","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst UserItem = ({ user }) => {\n  return (\n    <tr>\n      <td>{user.id}</td>\n      <td>{user.username}</td>\n      <td>{user.firstName}</td>\n      <td>{user.lastName}</td>\n      <td>{user.email}</td>\n      <td>{user.birthday}</td>\n    </tr>\n  );\n};\nconst UserList = ({ users }) => {\n  return (\n    <table className=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Birthday Year</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user) => (\n          <UserItem user={user} key={user.id.toString()} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst UserListFilterId = ({ users }) => {\n  let { id } = useParams();\n  let filtered_items = users.filter((item) => item.id.toString() === id);\n  return <UserList users={filtered_items} />;\n};\nexport { UserList, UserListFilterId };\n","import React from \"react\";\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      link: \"https://\",\n      usersWorked: [],\n    };\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleUsersWorkedChange(event) {\n    if (!event.target.selectedOptions) {\n      this.setState({ usersWorked: [] });\n    } else {\n      let usersWorked = [];\n      for (let i = 0; i < event.target.selectedOptions.length; i++) {\n        usersWorked.push(event.target.selectedOptions.item(i).value);\n      }\n      this.setState({ usersWorked: usersWorked });\n    }\n  }\n  handleSubmit(event) {\n    switch (this.props.titleForm) {\n      case \"Create\":\n        this.props.createProject(\n          this.state.title,\n          this.state.link,\n          this.state.usersWorked\n        );\n        break;\n\n      case \"Edit\":\n        this.props.editProject(\n          this.props.idProject,\n          this.state.title,\n          this.state.link,\n          this.state.usersWorked\n        );\n        break;\n      default:\n        console.log(this.props.titleForm);\n    }\n\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className=\"card\">\n        <h1>{this.props.titleForm} project</h1>\n        <form onSubmit={(event) => this.handleSubmit(event)}>\n          <div className=\"form-group py-2 col-6 offset-3\">\n            <label htmlFor=\"title\" className=\"mx-2\">\n              title:\n            </label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              value={this.state.title}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </div>\n          <div className=\"form-group py-2 col-6 offset-3\">\n            <label htmlFor=\"link\" className=\"mx-2\">\n              link:\n            </label>\n            <input\n              type=\"text\"\n              name=\"link\"\n              className=\"form-control\"\n              value={this.state.link}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </div>\n          <div className=\"form-group pa-2 col-6 offset-3\">\n            <label htmlFor=\"usersWorked\" className=\"mx-2\">\n              users worked:\n            </label>\n            <select\n              multiple\n              className=\"form-control\"\n              name=\"usersWorked\"\n              onChange={(event) => this.handleUsersWorkedChange(event)}\n            >\n              {this.props.users.map((user) => (\n                <option key={user.id.toString()} value={user.id}>\n                  {user.username}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"py-2\">\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ProjectForm;\n","import React, { useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport ProjectForm from \"./ProjectForm\";\n\nconst ProjectItem = ({ project, deleteProject }) => {\n  let { id } = useParams();\n  let history = useHistory();\n  let link;\n  if (id) {\n    link = project.id;\n  } else {\n    link = (\n      <Link to={`${history.location.pathname}/${project.id}`}>\n        {project.id}\n      </Link>\n    );\n  }\n\n  return (\n    <tr>\n      <td>{link}</td>\n      <td>{project.title}</td>\n      <td>{project.link}</td>\n      <td>{project.usersWorked.join(\", \")}</td>\n      <td>\n        <button type=\"button\" onClick={() => deleteProject(project.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst ProjectList = ({ users, projects, editProject, deleteProject }) => {\n  const [input, setInput] = useState(\"\");\n  let { id } = useParams();\n  let filtered_items = projects;\n  if (!id) {\n    filtered_items = projects.filter(\n      (item) => (item.title === \"\") | item.title.toLowerCase().includes(input)\n    );\n  }\n  return (\n    <div>\n      {!id && (\n        <div className=\"row pt-3 px-3 justify-content-end\">\n          <label\n            htmlFor=\"search_title\"\n            className=\"col-2 justify-content-end  align-self-end\"\n          >\n            Search title project:\n          </label>\n          <input\n            type=\"text\"\n            name=\"search_title\"\n            className=\"col-3 justify-content-end  align-self-end\"\n            placeholder=\"Search\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n      )}\n      <Link to=\"/create/project\">Create Project</Link>\n      <table className=\"table table-bordered my-3\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Link</th>\n            <th>UsersWorked</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered_items.map((project) => (\n            <ProjectItem\n              project={project}\n              deleteProject={deleteProject}\n              key={project.id.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n      {id && (\n        <ProjectForm\n          users={users}\n          titleForm=\"Edit\"\n          editProject={editProject}\n          idProject={id}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ProjectListFilterId = ({\n  users,\n  projects,\n  editProject,\n  deleteProject,\n}) => {\n  let { id } = useParams();\n  let filtered_items = projects.filter((item) => item.id.toString() === id);\n  return (\n    <ProjectList\n      projects={filtered_items}\n      deleteProject={deleteProject}\n      editProject={editProject}\n      users={users}\n    />\n  );\n};\n\nexport { ProjectList, ProjectListFilterId };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst TodoItem = ({ todo, deleteTodo }) => {\n  return (\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <td>{todo.text}</td>\n      <td>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`project/${todo.project.id}`}\n        >\n          {todo.project.title}\n        </Link>\n      </td>\n      <td>\n        <Link style={{ textDecoration: \"none\" }} to={`user/${todo.author.id}`}>\n          {todo.author.username}\n        </Link>\n      </td>\n      <td>{todo.author.email}</td>\n      <td>{todo.isActive.toString()}</td>\n      <td>{new Date(todo.dateCreated).toLocaleString()}</td>\n      <td>{new Date(todo.dateModified).toLocaleString()}</td>\n      <td>\n        <button type=\"button\" onClick={() => deleteTodo(todo.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst TodoList = ({ todos, deleteTodo }) => {\n  return (\n    <div>\n      <Link to=\"/create/todo\">Create Todo</Link>\n      <table className=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Text</th>\n            <th>Project</th>\n            <th>Author</th>\n            <th>Email</th>\n            <th>Is Active?</th>\n            <th>Date Created</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo) => (\n            <TodoItem\n              todo={todo}\n              deleteTodo={deleteTodo}\n              key={todo.id.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nconst TodoListFilterId = ({ todos, deleteTodo }) => {\n  let { id } = useParams();\n  let filtered_items = todos.filter((item) => item.id.toString() === id);\n  return <TodoList todos={filtered_items} deleteTodo={deleteTodo} />;\n};\nexport { TodoList, TodoListFilterId };\n","import React from \"react\";\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      text: \"\",\n      isActive: true,\n      author: 0,\n      project: 0,\n      selectedIdAuthor: 0,\n      selectedIdProject: 0,\n    };\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleAuthorChange(event) {\n    this.setState({\n      selectedIdAuthor: event.target.value,\n      author: event.target.value,\n    });\n  }\n  handleProjectChange(event) {\n    this.setState({\n      selectedIdProject: event.target.value,\n      project: event.target.value,\n    });\n  }\n  handleSubmit(event) {\n    this.props.createTodo(\n      this.state.title,\n      this.state.text,\n      this.state.isActive,\n      this.state.author,\n      this.state.project\n    );\n    event.preventDefault();\n  }\n\n  toggleChange = () => {\n    this.setState({\n      isActive: !this.state.isActive,\n    });\n  };\n  render() {\n    return (\n      <div className=\"card\">\n        <h1>Create Todo</h1>\n        <form onSubmit={(event) => this.handleSubmit(event)}>\n          <div className=\"form-group py-2 col-6 offset-3\">\n            <label htmlFor=\"title\" className=\"mx-2\">\n              title:\n            </label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              value={this.state.title}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </div>\n          <div className=\"form-group py-2 col-6 offset-3\">\n            <label htmlFor=\"text\" className=\"mx-2\">\n              text:\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"text\"\n              className=\"form-control\"\n              value={this.state.text}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </div>\n          <div className=\"form-group py-2 col-6 offset-3\">\n            <label htmlFor=\"isActive\" className=\"mx-2\">\n              isActive Todo?:\n            </label>\n            <input\n              type=\"checkbox\"\n              defaultChecked={this.state.isActive}\n              onChange={(event) => this.toggleChange(event)}\n            />\n          </div>\n          <div className=\"form-group pa-2 col-6 offset-3\">\n            <label htmlFor=\"author\" className=\"mx-2\">\n              author:\n            </label>\n            <select\n              className=\"form-control\"\n              name=\"author\"\n              onChange={(event) => this.handleAuthorChange(event)}\n              value={this.state.selectedIdAuthor}\n            >\n              <option value=\"0\">---</option>\n              {this.props.users.map((user) => (\n                <option key={user.id.toString()} value={user.id}>\n                  {user.username}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group pa-2 col-6 offset-3\">\n            <label htmlFor=\"project\" className=\"mx-2\">\n              project:\n            </label>\n            <select\n              className=\"form-control\"\n              name=\"project\"\n              value={this.state.selectedIdProject}\n              onChange={(event) => this.handleProjectChange(event)}\n            >\n              <option value=\"0\">---</option>\n              {this.props.projects.map((project) => (\n                <option key={project.id} value={project.id}>\n                  {project.title}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"py-2\">\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TodoForm;\n","import React from \"react\";\n\nconst InfoItem = ({ model }) => {\n  return (\n    <tr>\n      <td>{model.name}</td>\n      <td>{model.model.length}</td>\n    </tr>\n  );\n};\n\nconst InfoList = ({ users, todos, projects }) => {\n  let models = [\n    { name: \"users\", model: users },\n    { name: \"todos\", model: todos },\n    { name: \"projects\", model: projects },\n  ];\n  return (\n    <table className=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Model Name</th>\n          <th>Count</th>\n        </tr>\n      </thead>\n      <tbody>\n        {models.map((item) => (\n          <InfoItem model={item} key={item.name} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default InfoList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuItem = ({ title, link }) => {\n  let className = \"flex-fill bg-warning px-5 list-group-item text-white\";\n  return (\n    <li className={className}>\n      <Link style={{ textDecoration: \"none\" }} to={link}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nconst MenuList = ({ menu }) => {\n  return (\n    <div className=\"navbar\">\n      <ul className=\"py-4 flex-fill  list-group list-group-horizontal\">\n        {menu.map((menuItem) => (\n          <MenuItem\n            title={menuItem.title}\n            link={menuItem.link}\n            key={menuItem.id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default MenuList;\n","import React from \"react\";\n\nfunction Footer({ textFooter }) {\n  return (\n    <div className=\"card-footer fixed-bottom flex-fill bg-info text-white\">\n      {textFooter}\n    </div>\n  );\n}\nexport default Footer;\n","import React from \"react\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { login: \"\", password: \"\" };\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleSubmit(event) {\n    this.props.get_token(this.state.login, this.state.password);\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <form\n        className=\"form-inline\"\n        onSubmit={(event) => this.handleSubmit(event)}\n      >\n        <input\n          type=\"text\"\n          name=\"login\"\n          placeholder=\"email\"\n          className=\"mx-2\"\n          value={this.state.login}\n          onChange={(event) => this.handleChange(event)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          className=\"mx-2  \"\n          value={this.state.password}\n          onChange={(event) => this.handleChange(event)}\n        />\n        <input className=\"btn btn-primary mx-2\" type=\"submit\" value=\"Login\" />\n      </form>\n    );\n  }\n}\nexport default LoginForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport { UserList, UserListFilterId } from \"./components/Users\";\nimport { ProjectList, ProjectListFilterId } from \"./components/Projects\";\nimport { TodoList, TodoListFilterId } from \"./components/Todos\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport TodoForm from \"./components/TodoForm\";\nimport InfoList from \"./components/Home\";\nimport MenuList from \"./components/Menu\";\nimport Footer from \"./components/Footer\";\nimport LoginForm from \"./components/Auth\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\n\nconst NotFound404 = ({ location }) => {\n  return (\n    <div>\n      <h1>Страница по адресу '{location.pathname}' не найдена</h1>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"Guest\",\n      token: \"\",\n      users: [],\n      todos: [],\n      projects: [],\n      menu: [\n        { id: 1, link: \"/\", title: \"Home\" },\n        { id: 2, link: \"/user\", title: \"Users\" },\n        { id: 3, link: \"/todo\", title: \"Todos\" },\n        { id: 4, link: \"/project\", title: \"Projects\" },\n      ],\n      textFooter: \"Footer text about something.\",\n    };\n  }\n\n  set_token_and_username(token, username) {\n    const cookies = new Cookies();\n    cookies.set(\"token\", token);\n    cookies.set(\"username\", username);\n    this.setState({ token: token, username: username }, () => this.load_data());\n  }\n\n  is_authenticated() {\n    return !!this.state.token;\n  }\n\n  logout() {\n    let token = \"\";\n    let username = \"Guest\";\n    this.set_token_and_username(token, username);\n  }\n\n  get_token_and_username_from_storage() {\n    const cookies = new Cookies();\n    const token = cookies.get(\"token\");\n    const username = cookies.get(\"username\");\n    this.setState({ token: token, username: username }, () => this.load_data());\n  }\n\n  get_token(username, password) {\n    axios\n      .post(\"http://127.0.0.1:8000/api-token-auth/\", {\n        username: username,\n        password: password,\n      })\n      .then((response) => {\n        this.set_token_and_username(\n          response.data.token,\n          response.data.username\n        );\n      })\n      .catch((error) =>\n        alert(\n          `Code status is ${error.response.status} - Invalid username or password`\n        )\n      );\n  }\n\n  get_headers() {\n    let headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    if (this.is_authenticated()) {\n      headers[\"Authorization\"] = \"Token \" + this.state.token;\n    }\n    return headers;\n  }\n\n  async load_data() {\n    const headers = this.get_headers();\n    let users = [];\n    let todos = [];\n    let projects = [];\n\n    await axios\n      .get(\"http://127.0.0.1:8000/api/users/\", { headers })\n      .then((response) => {\n        users = response.data.results;\n      })\n      .catch(() => {\n        users = [];\n      });\n    await axios\n      .get(\"http://127.0.0.1:8000/api/projects/todo/\", { headers })\n      .then((response) => {\n        todos = response.data.results;\n      })\n      .catch((error) => console.log(console.log(error)));\n    await axios\n      .get(\"http://127.0.0.1:8000/api/projects/project/\", { headers })\n      .then((response) => {\n        projects = response.data.results;\n      })\n      .catch((error) => console.log(error));\n    this.setState({\n      users: users,\n      todos: todos,\n      projects: projects,\n    });\n  }\n  createProject(title, link, usersWorked) {\n    const headers = this.get_headers();\n    const data = { title: title, link: link, usersWorked: usersWorked };\n    axios\n      .post(\"http://127.0.0.1:8000/api/projects/project/\", data, { headers })\n      .then((response) => {\n        alert(`The project \"${response.data.title}\" created.`);\n        this.load_data();\n      })\n      .catch((error) => {\n        alert(`Code status is ${error.response.status} - Error create.`);\n      });\n  }\n  createTodo(title, text, isActive, author, project) {\n    const headers = this.get_headers();\n    const data = {\n      title: title,\n      text: text,\n      isActive: isActive,\n      author: author,\n      project: project,\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/projects/todo/\", data, { headers })\n      .then((response) => {\n        alert(`The todo \"${response.data.title}\" created.`);\n        this.load_data();\n      })\n      .catch((error) => {\n        alert(`Code status is ${error.response.status} - Error create.`);\n      });\n  }\n  editProject(id, title, link, usersWorked) {\n    const headers = this.get_headers();\n    const data = { id: id, title: title, link: link, usersWorked: usersWorked };\n    axios\n      .patch(`http://127.0.0.1:8000/api/projects/project/${id}/`, data, {\n        headers,\n      })\n      .then((response) => {\n        alert(`The project \"${response.data.title}\" edited.`);\n        this.load_data();\n      })\n      .catch((error) => {\n        alert(`Code status is ${error.response.status} - Error edit.`);\n      });\n  }\n  deleteProject(id) {\n    const headers = this.get_headers();\n    axios\n      .delete(`http://127.0.0.1:8000/api/projects/project/${id}/`, { headers })\n      .then((response) => {\n        this.load_data();\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\n          `Code status is ${error.response.status} - Error delete, project isn't empty.`\n        );\n        this.load_data();\n      });\n  }\n  deleteTodo(id) {\n    const headers = this.get_headers();\n    axios\n      .delete(`http://127.0.0.1:8000/api/projects/todo/${id}/`, { headers })\n      .then((response) => {\n        this.load_data();\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ todos: [] });\n      });\n  }\n\n  componentDidMount() {\n    this.get_token_and_username_from_storage();\n  }\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <BrowserRouter>\n          <div className=\"row pt-3 justify-content-end\">\n            <div className=\"col-3  align-self-end\">\n              <ul className=\"list-group list-group-horizontal\">\n                <li className=\"list-group-item\">\n                  Welcome <strong>{this.state.username}</strong>!\n                </li>\n                <li className=\"list-group-item\">\n                  {this.is_authenticated() ? (\n                    <button onClick={() => this.logout()}>Logout</button>\n                  ) : (\n                    <Link to=\"/login\">\n                      <button>Login</button>\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <MenuList menu={this.state.menu} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <InfoList\n                  users={this.state.users}\n                  projects={this.state.projects}\n                  todos={this.state.todos}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              component={() => (\n                <LoginForm\n                  get_token={(username, password) =>\n                    this.get_token(username, password)\n                  }\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/user\"\n              component={() => <UserList users={this.state.users} />}\n            />\n            <Route\n              exact\n              path=\"/project\"\n              component={() => (\n                <ProjectList\n                  projects={this.state.projects}\n                  users={this.state.users}\n                  deleteProject={(id) => this.deleteProject(id)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/todo\"\n              component={() => (\n                <TodoList\n                  todos={this.state.todos}\n                  deleteTodo={(id) => this.deleteTodo(id)}\n                />\n              )}\n            />\n            <Route path=\"/project/:id\">\n              <ProjectListFilterId\n                projects={this.state.projects}\n                users={this.state.users}\n                deleteProject={(id) => this.deleteProject(id)}\n                editProject={(id, title, link, usersWorked) =>\n                  this.editProject(id, title, link, usersWorked)\n                }\n              />\n            </Route>\n            <Route\n              exact\n              path=\"/create/project\"\n              component={() => (\n                <ProjectForm\n                  titleForm=\"Create\"\n                  users={this.state.users}\n                  createProject={(title, link, usersWorked) =>\n                    this.createProject(title, link, usersWorked)\n                  }\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/create/todo\"\n              component={() => (\n                <TodoForm\n                  users={this.state.users}\n                  projects={this.state.projects}\n                  createTodo={(title, text, isActive, author, project) =>\n                    this.createTodo(title, text, isActive, author, project)\n                  }\n                />\n              )}\n            />\n            <Route path=\"/todo/:id\">\n              <TodoListFilterId\n                todos={this.state.todos}\n                deleteTodo={(id) => this.deleteTodo(id)}\n              />\n            </Route>\n            <Route path=\"/user/:id\">\n              <UserListFilterId users={this.state.users} />\n            </Route>\n            <Route component={NotFound404} />\n          </Switch>\n        </BrowserRouter>\n        <div className=\"navbar\">\n          <Footer textFooter={this.state.textFooter} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}