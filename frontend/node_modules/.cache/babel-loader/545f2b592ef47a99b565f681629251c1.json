{"ast":null,"code":"var _jsxFileName = \"/home/alex/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/DRF_GB/TODO_List/frontend/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectItem = ({\n  project\n}) => {\n  let usersWorked = project.usersWorked.map(user => user.username);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: usersWorked.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProjectItem;\n\nconst ProjectList = ({\n  projects\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-bordered\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"UsersWorked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectItem, {\n        project: project\n      }, project.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ProjectList;\n\nconst ProjectListFilterId = ({\n  projects\n}) => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let filtered_items = projects.filter(item => item.id.toString() === id);\n  return /*#__PURE__*/_jsxDEV(ProjectList, {\n    projects: filtered_items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProjectListFilterId, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ProjectListFilterId;\nexport { ProjectList, ProjectListFilterId };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProjectItem\");\n$RefreshReg$(_c2, \"ProjectList\");\n$RefreshReg$(_c3, \"ProjectListFilterId\");","map":{"version":3,"sources":["/home/alex/Документы/DRF_GB/TODO_List/frontend/src/components/Projects.js"],"names":["React","useParams","ProjectItem","project","usersWorked","map","user","username","id","title","link","join","ProjectList","projects","toString","ProjectListFilterId","filtered_items","filter","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnC,MAAIC,WAAW,GAAGD,OAAO,CAACC,WAAR,CAAoBC,GAApB,CAAyBC,IAAD,IAAUA,IAAI,CAACC,QAAvC,CAAlB;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKJ,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKL,OAAO,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKN,OAAO,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKN,WAAW,CAACO,IAAZ,CAAiB,IAAjB;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;KAAMT,W;;AAYN,MAAMU,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,sBACE;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,gBACGA,QAAQ,CAACR,GAAT,CAAcF,OAAD,iBACZ,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA;AAAtB,SAAoCA,OAAO,CAACK,EAAR,CAAWM,QAAX,EAApC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;MAAMF,W;;AAoBN,MAAMG,mBAAmB,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,MAAI;AAAEL,IAAAA;AAAF,MAASP,SAAS,EAAtB;AACA,MAAIe,cAAc,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACV,EAAL,CAAQM,QAAR,OAAuBN,EAAjD,CAArB;AACA,sBAAO,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEQ;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMD,mB;UACSd,S;;;MADTc,mB;AAKN,SAASH,WAAT,EAAsBG,mBAAtB","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst ProjectItem = ({ project }) => {\n  let usersWorked = project.usersWorked.map((user) => user.username);\n  return (\n    <tr>\n      <td>{project.id}</td>\n      <td>{project.title}</td>\n      <td>{project.link}</td>\n      <td>{usersWorked.join(\", \")}</td>\n    </tr>\n  );\n};\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <table className=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Title</th>\n          <th>Link</th>\n          <th>UsersWorked</th>\n        </tr>\n      </thead>\n      <tbody>\n        {projects.map((project) => (\n          <ProjectItem project={project} key={project.id.toString()} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst ProjectListFilterId = ({ projects }) => {\n  let { id } = useParams();\n  let filtered_items = projects.filter((item) => item.id.toString() === id);\n  return <ProjectList projects={filtered_items} />;\n};\nexport { ProjectList, ProjectListFilterId };\n"]},"metadata":{},"sourceType":"module"}