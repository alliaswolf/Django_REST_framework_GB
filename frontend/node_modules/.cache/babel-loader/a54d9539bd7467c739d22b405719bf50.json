{"ast":null,"code":"var _jsxFileName = \"/home/alex/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/DRF_GB/TODO_List/frontend/src/components/Projects.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import ProjectForm from \"./ProjectForm\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditItem(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\n_c = EditItem;\n\nconst ProjectItem = ({\n  project,\n  deleteProject,\n  editProject\n}) => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    location\n  } = useHistory();\n  let link, title;\n\n  if (id) {\n    link = /*#__PURE__*/_jsxDEV(EditItem, {\n      onClick: console.log(\"!!!\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n    title = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  } else {\n    link = /*#__PURE__*/_jsxDEV(Link, {\n      to: `${location.pathname}/${project.id}`,\n      children: \"Edit Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n    title = project.title;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.usersWorked.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteProject(project.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectItem, \"BSO4I21HScYq8uK9RPSTbbvWA0E=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c2 = ProjectItem;\n\nconst ProjectList = ({\n  projects,\n  deleteProject,\n  editProject\n}) => {\n  _s2();\n\n  const [input, setInput] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  let filtered_items = projects;\n\n  if (!id) {\n    filtered_items = projects.filter(item => item.title === \"\" | item.title.toLowerCase().includes(input));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-3 px-3 justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search_title\",\n        className: \"col-2 justify-content-end  align-self-end\",\n        children: \"Search title project:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search_title\",\n        className: \"col-3 justify-content-end  align-self-end\",\n        placeholder: \"Search\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create/project\",\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UsersWorked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filtered_items.map(project => /*#__PURE__*/_jsxDEV(ProjectItem, {\n          project: project,\n          deleteProject: deleteProject,\n          editProject: editProject\n        }, project.id.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ProjectList, \"LHq8siBiLFMuLugXtBBmGeihuO4=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ProjectList;\n\nconst ProjectListFilterId = ({\n  projects,\n  deleteProject,\n  editProject\n}) => {\n  _s3();\n\n  let {\n    id\n  } = useParams();\n  let filtered_items = projects.filter(item => item.id.toString() === id);\n  return /*#__PURE__*/_jsxDEV(ProjectList, {\n    projects: filtered_items,\n    deleteProject: deleteProject,\n    editProject: editProject\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ProjectListFilterId, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c4 = ProjectListFilterId;\nexport { ProjectList, ProjectListFilterId };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditItem\");\n$RefreshReg$(_c2, \"ProjectItem\");\n$RefreshReg$(_c3, \"ProjectList\");\n$RefreshReg$(_c4, \"ProjectListFilterId\");","map":{"version":3,"sources":["/home/alex/Документы/DRF_GB/TODO_List/frontend/src/components/Projects.js"],"names":["React","useState","useParams","useHistory","Link","EditItem","props","onClick","ProjectItem","project","deleteProject","editProject","id","location","link","title","console","log","pathname","usersWorked","join","ProjectList","projects","input","setInput","filtered_items","filter","item","toLowerCase","includes","e","target","value","map","toString","ProjectListFilterId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import ProjectForm from \"./ProjectForm\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction EditItem(props) {\n  return <button onClick={props.onClick}>Войти</button>;\n}\nconst ProjectItem = ({ project, deleteProject, editProject }) => {\n  let { id } = useParams();\n  let { location } = useHistory();\n  let link, title;\n  if (id) {\n    link = <EditItem onClick={console.log(\"!!!\")} />;\n    title = <input type=\"text\" value={project.title} />;\n  } else {\n    link = <Link to={`${location.pathname}/${project.id}`}>Edit Project</Link>;\n    title = project.title;\n  }\n  return (\n    <tr>\n      <td>{project.id}</td>\n      <td>{title}</td>\n      <td>{project.link}</td>\n      <td>{project.usersWorked.join(\", \")}</td>\n      <td>{link}</td>\n      <td>\n        <button type=\"button\" onClick={() => deleteProject(project.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst ProjectList = ({ projects, deleteProject, editProject }) => {\n  const [input, setInput] = useState(\"\");\n  let { id } = useParams();\n  let filtered_items = projects;\n  if (!id) {\n    filtered_items = projects.filter(\n      (item) => (item.title === \"\") | item.title.toLowerCase().includes(input)\n    );\n  }\n  return (\n    <div>\n      {!id && (\n        <div className=\"row pt-3 px-3 justify-content-end\">\n          <label\n            htmlFor=\"search_title\"\n            className=\"col-2 justify-content-end  align-self-end\"\n          >\n            Search title project:\n          </label>\n          <input\n            type=\"text\"\n            name=\"search_title\"\n            className=\"col-3 justify-content-end  align-self-end\"\n            placeholder=\"Search\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n      )}\n      <Link to=\"/create/project\">Create Project</Link>\n      <table className=\"table table-bordered my-3\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Link</th>\n            <th>UsersWorked</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered_items.map((project) => (\n            <ProjectItem\n              project={project}\n              deleteProject={deleteProject}\n              editProject={editProject}\n              key={project.id.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst ProjectListFilterId = ({ projects, deleteProject, editProject }) => {\n  let { id } = useParams();\n  let filtered_items = projects.filter((item) => item.id.toString() === id);\n  return (\n    <ProjectList\n      projects={filtered_items}\n      deleteProject={deleteProject}\n      editProject={editProject}\n    />\n  );\n};\n\nexport { ProjectList, ProjectListFilterId };\n"]},"metadata":{},"sourceType":"module"}