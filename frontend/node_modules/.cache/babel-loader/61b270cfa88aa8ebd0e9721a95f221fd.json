{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(_ref){var todo=_ref.todo,deleteTodo=_ref.deleteTodo;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:todo.id}),/*#__PURE__*/_jsx(\"td\",{children:todo.title}),/*#__PURE__*/_jsx(\"td\",{children:todo.text}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{style:{textDecoration:\"none\"},to:\"project/\".concat(todo.project.id),children:todo.project.title})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{style:{textDecoration:\"none\"},to:\"user/\".concat(todo.author.id),children:todo.author.username})}),/*#__PURE__*/_jsx(\"td\",{children:todo.author.email}),/*#__PURE__*/_jsx(\"td\",{children:todo.isActive.toString()}),/*#__PURE__*/_jsx(\"td\",{children:new Date(todo.dateCreated).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:new Date(todo.dateModified).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return deleteTodo(todo.id);},children:\"Delete\"})})]});};var TodoList=function TodoList(_ref2){var todos=_ref2.todos,deleteTodo=_ref2.deleteTodo;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/create/todo\",children:\"Create Todo\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Project\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Author\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Is Active?\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date Created\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date Modified\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:todos.map(function(todo){return/*#__PURE__*/_jsx(TodoItem,{todo:todo,deleteTodo:deleteTodo},todo.id.toString());})})]})]});};var TodoListFilterId=function TodoListFilterId(_ref3){var todos=_ref3.todos,deleteTodo=_ref3.deleteTodo;var _useParams=useParams(),id=_useParams.id;var filtered_items=todos.filter(function(item){return item.id.toString()===id;});return/*#__PURE__*/_jsx(TodoList,{todos:filtered_items,deleteTodo:deleteTodo});};export{TodoList,TodoListFilterId};","map":{"version":3,"sources":["/home/alex/Документы/DRF_GB/TODO_List/frontend/src/components/Todos.js"],"names":["React","Link","useParams","TodoItem","todo","deleteTodo","id","title","text","textDecoration","project","author","username","email","isActive","toString","Date","dateCreated","toLocaleString","dateModified","TodoList","todos","map","TodoListFilterId","filtered_items","filter","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA0B,IAAvBC,CAAAA,IAAuB,MAAvBA,IAAuB,CAAjBC,UAAiB,MAAjBA,UAAiB,CACzC,mBACE,mCACE,oBAAKD,IAAI,CAACE,EAAV,EADF,cAEE,oBAAKF,IAAI,CAACG,KAAV,EAFF,cAGE,oBAAKH,IAAI,CAACI,IAAV,EAHF,cAIE,iCACE,KAAC,IAAD,EACE,KAAK,CAAE,CAAEC,cAAc,CAAE,MAAlB,CADT,CAEE,EAAE,mBAAaL,IAAI,CAACM,OAAL,CAAaJ,EAA1B,CAFJ,UAIGF,IAAI,CAACM,OAAL,CAAaH,KAJhB,EADF,EAJF,cAYE,iCACE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEE,cAAc,CAAE,MAAlB,CAAb,CAAyC,EAAE,gBAAUL,IAAI,CAACO,MAAL,CAAYL,EAAtB,CAA3C,UACGF,IAAI,CAACO,MAAL,CAAYC,QADf,EADF,EAZF,cAiBE,oBAAKR,IAAI,CAACO,MAAL,CAAYE,KAAjB,EAjBF,cAkBE,oBAAKT,IAAI,CAACU,QAAL,CAAcC,QAAd,EAAL,EAlBF,cAmBE,oBAAK,GAAIC,CAAAA,IAAJ,CAASZ,IAAI,CAACa,WAAd,EAA2BC,cAA3B,EAAL,EAnBF,cAoBE,oBAAK,GAAIF,CAAAA,IAAJ,CAASZ,IAAI,CAACe,YAAd,EAA4BD,cAA5B,EAAL,EApBF,cAqBE,iCACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,yBAAMb,CAAAA,UAAU,CAACD,IAAI,CAACE,EAAN,CAAhB,EAA/B,oBADF,EArBF,GADF,CA6BD,CA9BD,CAgCA,GAAMc,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,OAA2B,IAAxBC,CAAAA,KAAwB,OAAxBA,KAAwB,CAAjBhB,UAAiB,OAAjBA,UAAiB,CAC1C,mBACE,oCACE,KAAC,IAAD,EAAM,EAAE,CAAC,cAAT,yBADF,cAEE,eAAO,SAAS,CAAC,sBAAjB,wBACE,oCACE,mCACE,0BADF,cAEE,6BAFF,cAGE,4BAHF,cAIE,+BAJF,cAKE,8BALF,cAME,6BANF,cAOE,kCAPF,cAQE,oCARF,cASE,qCATF,cAUE,aAVF,GADF,EADF,cAeE,uBACGgB,KAAK,CAACC,GAAN,CAAU,SAAClB,IAAD,qBACT,KAAC,QAAD,EACE,IAAI,CAAEA,IADR,CAEE,UAAU,CAAEC,UAFd,EAGOD,IAAI,CAACE,EAAL,CAAQS,QAAR,EAHP,CADS,EAAV,CADH,EAfF,GAFF,GADF,CA8BD,CA/BD,CAgCA,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,OAA2B,IAAxBF,CAAAA,KAAwB,OAAxBA,KAAwB,CAAjBhB,UAAiB,OAAjBA,UAAiB,CAClD,eAAaH,SAAS,EAAtB,CAAMI,EAAN,YAAMA,EAAN,CACA,GAAIkB,CAAAA,cAAc,CAAGH,KAAK,CAACI,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACpB,EAAL,CAAQS,QAAR,KAAuBT,EAAjC,EAAb,CAArB,CACA,mBAAO,KAAC,QAAD,EAAU,KAAK,CAAEkB,cAAjB,CAAiC,UAAU,CAAEnB,UAA7C,EAAP,CACD,CAJD,CAKA,OAASe,QAAT,CAAmBG,gBAAnB","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst TodoItem = ({ todo, deleteTodo }) => {\n  return (\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <td>{todo.text}</td>\n      <td>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`project/${todo.project.id}`}\n        >\n          {todo.project.title}\n        </Link>\n      </td>\n      <td>\n        <Link style={{ textDecoration: \"none\" }} to={`user/${todo.author.id}`}>\n          {todo.author.username}\n        </Link>\n      </td>\n      <td>{todo.author.email}</td>\n      <td>{todo.isActive.toString()}</td>\n      <td>{new Date(todo.dateCreated).toLocaleString()}</td>\n      <td>{new Date(todo.dateModified).toLocaleString()}</td>\n      <td>\n        <button type=\"button\" onClick={() => deleteTodo(todo.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst TodoList = ({ todos, deleteTodo }) => {\n  return (\n    <div>\n      <Link to=\"/create/todo\">Create Todo</Link>\n      <table className=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Text</th>\n            <th>Project</th>\n            <th>Author</th>\n            <th>Email</th>\n            <th>Is Active?</th>\n            <th>Date Created</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo) => (\n            <TodoItem\n              todo={todo}\n              deleteTodo={deleteTodo}\n              key={todo.id.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nconst TodoListFilterId = ({ todos, deleteTodo }) => {\n  let { id } = useParams();\n  let filtered_items = todos.filter((item) => item.id.toString() === id);\n  return <TodoList todos={filtered_items} deleteTodo={deleteTodo} />;\n};\nexport { TodoList, TodoListFilterId };\n"]},"metadata":{},"sourceType":"module"}