{"ast":null,"code":"var _jsxFileName = \"/home/alex/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/DRF_GB/TODO_List/frontend/src/components/Projects.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport ProjectForm from \"./ProjectForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectItem = ({\n  project,\n  deleteProject\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: project.usersWorked.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteProject(project.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProjectItem;\n\nconst ProjectList = ({\n  users,\n  projects,\n  deleteProject\n}) => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  let filtered_items = projects;\n\n  if (!id) {\n    filtered_items = projects.filter(item => item.title === \"\" | item.title.toLowerCase().includes(input));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-3 px-3 justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search_title\",\n        className: \"col-2 justify-content-end  align-self-end\",\n        children: \"Search title project:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search_title\",\n        className: \"col-3 justify-content-end  align-self-end\",\n        placeholder: \"Search\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/create/project\",\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UsersWorked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filtered_items.map(project => /*#__PURE__*/_jsxDEV(ProjectItem, {\n          project: project,\n          deleteProject: deleteProject\n        }, project.id.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), id && /*#__PURE__*/_jsxDEV(ProjectForm, {\n      users: users,\n      projectsW: projects,\n      title: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectList, \"LHq8siBiLFMuLugXtBBmGeihuO4=\", false, function () {\n  return [useParams];\n});\n\n_c2 = ProjectList;\n\nconst ProjectListFilterId = ({\n  users,\n  projects,\n  deleteProject\n}) => {\n  _s2();\n\n  let {\n    id\n  } = useParams();\n  console.log(\"PDE\", users);\n  let filtered_items = projects.filter(item => item.id.toString() === id);\n  return /*#__PURE__*/_jsxDEV(ProjectList, {\n    projects: filtered_items,\n    deleteProject: deleteProject,\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ProjectListFilterId, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ProjectListFilterId;\nexport { ProjectList, ProjectListFilterId };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProjectItem\");\n$RefreshReg$(_c2, \"ProjectList\");\n$RefreshReg$(_c3, \"ProjectListFilterId\");","map":{"version":3,"sources":["/home/alex/Документы/DRF_GB/TODO_List/frontend/src/components/Projects.js"],"names":["React","useState","useParams","Link","ProjectForm","ProjectItem","project","deleteProject","id","title","link","usersWorked","join","ProjectList","users","projects","input","setInput","filtered_items","filter","item","toLowerCase","includes","e","target","value","map","toString","ProjectListFilterId","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport ProjectForm from \"./ProjectForm\";\n\nconst ProjectItem = ({ project, deleteProject }) => {\n  return (\n    <tr>\n      <td>{project.id}</td>\n      <td>{project.title}</td>\n      <td>{project.link}</td>\n      <td>{project.usersWorked.join(\", \")}</td>\n      <td>\n        <button type=\"button\" onClick={() => deleteProject(project.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst ProjectList = ({ users, projects, deleteProject }) => {\n  const [input, setInput] = useState(\"\");\n  let { id } = useParams();\n  let filtered_items = projects;\n  if (!id) {\n    filtered_items = projects.filter(\n      (item) => (item.title === \"\") | item.title.toLowerCase().includes(input)\n    );\n  }\n  return (\n    <div>\n      {!id && (\n        <div className=\"row pt-3 px-3 justify-content-end\">\n          <label\n            htmlFor=\"search_title\"\n            className=\"col-2 justify-content-end  align-self-end\"\n          >\n            Search title project:\n          </label>\n          <input\n            type=\"text\"\n            name=\"search_title\"\n            className=\"col-3 justify-content-end  align-self-end\"\n            placeholder=\"Search\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n      )}\n      <Link to=\"/create/project\">Create Project</Link>\n      <table className=\"table table-bordered my-3\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Link</th>\n            <th>UsersWorked</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filtered_items.map((project) => (\n            <ProjectItem\n              project={project}\n              deleteProject={deleteProject}\n              key={project.id.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n      {id && (\n        <ProjectForm\n          users={users}\n          projectsW={projects}\n          title=\"Edit\"\n        ></ProjectForm>\n      )}\n    </div>\n  );\n};\n\nconst ProjectListFilterId = ({ users, projects, deleteProject }) => {\n  let { id } = useParams();\n  console.log(\"PDE\", users);\n  let filtered_items = projects.filter((item) => item.id.toString() === id);\n  return (\n    <ProjectList\n      projects={filtered_items}\n      deleteProject={deleteProject}\n      users={users}\n    />\n  );\n};\n\nexport { ProjectList, ProjectListFilterId };\n"]},"metadata":{},"sourceType":"module"}